{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BenCoder\\\\Desktop\\\\checklist\\\\checklist-frontend\\\\src\\\\components\\\\Pages\\\\User.jsx\",\n  _s = $RefreshSig$();\nimport { Suspense, lazy, useEffect, useState } from \"react\";\nimport axiosBaseurl from \"../axiosBaseurl.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst wait = time => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve();\n    }, time);\n  });\n};\nconst SlidesLoad = /*#__PURE__*/lazy(_c = () => import('../Pages/VirtualSlides.jsx'));\n// const SlidesLoad = lazy(() => wait(2000).then(() => import('../Pages/VirtualSlides.jsx')));\n// const loadingSpinner =lazy(()=>import('../Pages/Laodingspinner.jsx'));\n_c2 = SlidesLoad;\nfunction User(props) {\n  _s();\n  /** Added By abanerjee2 */\n  const [pendingCount, setpendingCount] = useState('');\n  /** Get Pending Lists for Current Users */\n  const pendingItems = async () => {\n    await axiosBaseurl.post('pendingtasks', {\n      currentuserid: props.loggedinuser\n    }).then(result => {\n      console.log(result.data);\n      setpendingCount(result.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  useEffect(() => {\n    pendingItems();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      children: /*#__PURE__*/_jsxDEV(SlidesLoad, {\n        batchid: props.batchid,\n        checkkey: props.id,\n        onrefresh: props.refresh,\n        showcalendar: props.showCalendardata,\n        calendardetails: props.calendarDetails,\n        selecteddate: props.selecteddate,\n        pendingcount: pendingCount\n      }, props.refresh, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, props.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, props.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(User, \"YpdF9AjRY58LSSljiGstnb/u7Xo=\");\n_c3 = User;\nexport default User;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"SlidesLoad$lazy\");\n$RefreshReg$(_c2, \"SlidesLoad\");\n$RefreshReg$(_c3, \"User\");","map":{"version":3,"names":["Suspense","lazy","useEffect","useState","axiosBaseurl","jsxDEV","_jsxDEV","wait","time","Promise","resolve","setTimeout","SlidesLoad","_c","_c2","User","props","_s","pendingCount","setpendingCount","pendingItems","post","currentuserid","loggedinuser","then","result","console","log","data","catch","err","children","batchid","checkkey","id","onrefresh","refresh","showcalendar","showCalendardata","calendardetails","calendarDetails","selecteddate","pendingcount","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["C:/Users/BenCoder/Desktop/checklist/checklist-frontend/src/components/Pages/User.jsx"],"sourcesContent":["import { Suspense, lazy, useEffect, useState } from \"react\";\r\n\r\nimport axiosBaseurl from \"../axiosBaseurl.js\";\r\n\r\nconst wait = (time) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve()\r\n    }, time)\r\n  })\r\n}\r\n\r\nconst SlidesLoad = lazy(() => import('../Pages/VirtualSlides.jsx'));\r\n// const SlidesLoad = lazy(() => wait(2000).then(() => import('../Pages/VirtualSlides.jsx')));\r\n// const loadingSpinner =lazy(()=>import('../Pages/Laodingspinner.jsx'));\r\nfunction User(props) {\r\n\r\n  /** Added By abanerjee2 */\r\n  const [pendingCount, setpendingCount] = useState('');\r\n  /** Get Pending Lists for Current Users */\r\n  const pendingItems = async () => {\r\n    await axiosBaseurl.post('pendingtasks', { currentuserid: props.loggedinuser }).then((result) => {\r\n      console.log(result.data);\r\n      setpendingCount(result.data);\r\n    }).catch((err) => {\r\n      console.log(err);\r\n    });\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    pendingItems();\r\n  }, [])\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div key={props.id}>\r\n\r\n      <Suspense key={props.id}>\r\n        <SlidesLoad batchid={props.batchid} checkkey={props.id} onrefresh={props.refresh} key={props.refresh} showcalendar={props.showCalendardata} calendardetails={props.calendarDetails} selecteddate={props.selecteddate} pendingcount={pendingCount} />\r\n      </Suspense>\r\n\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default User;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,IAAI,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3D,OAAOC,YAAY,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,IAAI,GAAIC,IAAI,IAAK;EACrB,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC9BC,UAAU,CAAC,MAAM;MACfD,OAAO,CAAC,CAAC;IACX,CAAC,EAAEF,IAAI,CAAC;EACV,CAAC,CAAC;AACJ,CAAC;AAED,MAAMI,UAAU,gBAAGX,IAAI,CAAAY,EAAA,GAACA,CAAA,KAAM,MAAM,CAAC,4BAA4B,CAAC,CAAC;AACnE;AACA;AAAAC,GAAA,GAFMF,UAAU;AAGhB,SAASG,IAAIA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAEnB;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD;EACA,MAAMiB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMhB,YAAY,CAACiB,IAAI,CAAC,cAAc,EAAE;MAAEC,aAAa,EAAEN,KAAK,CAACO;IAAa,CAAC,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAK;MAC9FC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,IAAI,CAAC;MACxBT,eAAe,CAACM,MAAM,CAACG,IAAI,CAAC;IAC9B,CAAC,CAAC,CAACC,KAAK,CAAEC,GAAG,IAAK;MAChBJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;IAClB,CAAC,CAAC;EAEJ,CAAC;EAED5B,SAAS,CAAC,MAAM;IACdkB,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAKN,oBAEEd,OAAA;IAAAyB,QAAA,eAEEzB,OAAA,CAACN,QAAQ;MAAA+B,QAAA,eACPzB,OAAA,CAACM,UAAU;QAACoB,OAAO,EAAEhB,KAAK,CAACgB,OAAQ;QAACC,QAAQ,EAAEjB,KAAK,CAACkB,EAAG;QAACC,SAAS,EAAEnB,KAAK,CAACoB,OAAQ;QAAqBC,YAAY,EAAErB,KAAK,CAACsB,gBAAiB;QAACC,eAAe,EAAEvB,KAAK,CAACwB,eAAgB;QAACC,YAAY,EAAEzB,KAAK,CAACyB,YAAa;QAACC,YAAY,EAAExB;MAAa,GAA1JF,KAAK,CAACoB,OAAO;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA+I;IAAC,GADvO9B,KAAK,CAACkB,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEb;EAAC,GAJH9B,KAAK,CAACkB,EAAE;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAOb,CAAC;AAIV;AAAC7B,EAAA,CAnCQF,IAAI;AAAAgC,GAAA,GAAJhC,IAAI;AAqCb,eAAeA,IAAI;AAAC,IAAAF,EAAA,EAAAC,GAAA,EAAAiC,GAAA;AAAAC,YAAA,CAAAnC,EAAA;AAAAmC,YAAA,CAAAlC,GAAA;AAAAkC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}